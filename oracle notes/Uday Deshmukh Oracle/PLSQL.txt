--ed C:\Users\dacstudent\Desktop\PLSQL.sql
--set serveroutput on

/* begin 
dbms_output.put_line('Hello');
end; */


--Assignment 1(Q.1)
/* declare 
a number;
b number;
begin

a:=&a;
b:=&b;

dbms_output.put_line('Add: '|| (a+b));

dbms_output.put_line('Subtract: '|| (a-b));

dbms_output.put_line('Multiply: '|| (a*b));

dbms_output.put_line('Divide: '|| (a/b));

end; */


--Assignment 1(Q.2)
/* declare
rno number;
sub1 number;
sub2 number;
sub3 number;
total number;
ptage number;

begin

rno:=&rno;
sub1:=&sub1;
sub2:=&sub2;
sub3:=&sub3;

total:=(sub1+sub2+sub3);
ptage:=((total*100)/300);

dbms_output.put_line('Roll no: '||rno);

dbms_output.put_line('Total marks: '||total);
dbms_output.put_line('Percentage: '||(ptage));

if((ptage) >= 85)then
dbms_output.put_line('Grade:A');

elsif(ptage < 85 and ptage >=75)then
dbms_output.put_line('Grade:B');

elsif(ptage<75 and ptage >=60)then
dbms_output.put_line('Grade:C');

elsif(ptage<60 and ptage>=35)then
dbms_output.put_line('Grade:D');

else
dbms_output.put_line('Fail');

end if;

end; */

--Assignment 1(Q.3)

/* declare
i number;
cnt number:=0;

begin
i:=1;

loop

if(mod(i,2)!=0)then

dbms_output.put_line(i);
exit when cnt=10;
cnt:=(cnt+1);	

end if;
i:=(i+1);

end loop;
end; */

--Assignment 1(Q.4)
/* declare 
i number;
cnt number;
temp number;
begin
temp:=0;
i:=2;
while(i<=10)loop
	cnt:=2;
	temp:=0;
	while(cnt<i)loop
		if(mod(i,cnt)=0)then
			temp:=1;
			exit;
		end if;	
		cnt:=(cnt+1);
	end loop;
	if(temp=0)then
		dbms_output.put_line(i);
	end if;
	i:=(i+1);
end loop;

end; */

--Assignment 1 (Q.5)
/* declare
a number;
b number;
c number;

begin

a:=&a;
b:=&b;
c:=&c;
if(a>b and a>c)then
	dbms_output.put_line('max : '||a);
elsif(b>a and b>c)then
	dbms_output.put_line('max : '||b);
else
	dbms_output.put_line('max : '||c);
end if;

if(a<b and a<c)then
	dbms_output.put_line('min : '||a);
elsif(b<a and b<c)then
	dbms_output.put_line('min : '||b);
else
	dbms_output.put_line('min : '||c);
end if;

end; */





--Assignment 1 (Q.7)
--create table cust(id number(2) primary key,name varchar2(10),address varchar2(10),city varchar2(10));
/* declare
id1 cust.id%type;
name1 cust.name%type;
address1 cust.address%type;
city1 cust.city%type;
begin
id1:=&id1;
name1:='&name1';
address1:='&address1';
city1:='&city1';
insert into cust values(id1,name1,address1,city1);
--select * from cust;
end; */

--Assignment 1 (Q.6)

/* declare
veno number;
emprec emp111%rowtype;
begin
veno:=&veno;
select * into emprec from emp111 where eno=veno;
dbms_output.put_line(emprec.enm);
Exception
	when NO_DATA_FOUND then
	dbms_output.put_line('NOT FOUND');
end; */

--select * from dept111;


 
--Assignment 1(Q.8)
/* declare 
var number;
begin
select max(dno) into var from dept111;
dbms_output.put_line(var);
end; */


--Cursor
--Implicit Cursor


/* declare
cnt number:=0;
begin
update emp111
set comm=comm+500
where comm=0;
if sql%found then
cnt:=sql%rowcount;
dbms_output.put_line(cnt||'Records are updated');
else
dbms_output.put_line(cnt||'Records are not updated');
end if;
end; */

--Explicit Cursor
 
/* declare
cursor c1 is
select * from emp111 where dno=10;
rec emp111%rowtype;
begin
open c1;
loop 
fetch c1 into rec;
exit when c1%notfound;
dbms_output.put_line(rec.dno);
dbms_output.put_line(rec.enm);
dbms_output.put_line(rec.eno);
dbms_output.put_line(rec.job);

end loop;
end; */


--Explicit cursor using cursor variable

/* declare

cursor c1 is
select eno,enm,sal,sal+(sal*0.25) as total_sal from emp111 where dno=10;
f c1%rowtype;

begin

open c1;
loop
fetch c1 into f;

exit when c1%notfound;

dbms_output.put_line(f.eno);
dbms_output.put_line(f.enm);
dbms_output.put_line(f.sal);
dbms_output.put_line(f.total_sal);
end loop;
end;
*/


--Cursor for aggregate function

/* declare
cursor c1 is
select avg(sal) as avg1 from emp111 group by dno;
f1 c1%rowtype;

begin
open c1;
loop
fetch c1 into f1;

exit when c1%notfound;

dbms_output.put_line(f1.avg1);
end loop;
end; */


--cursor with loop

/* declare
cursor c1 is
select dno,max(sal) as sal,trunc(avg(sal),2) as avg_sal from emp111 group by dno order by dno;
begin
for x in c1 loop
dbms_output.put_line('Emp dept no: ' || x.dno);

dbms_output.put_line('Emp max sal: ' || x.sal);


dbms_output.put_line('Emp avg sal: ' || x.avg_sal);

end loop;

end; */



--Cursor with parameters

/* declare 
cursor c1(pdno emp111.dno%type,jb emp111.job%type) is
select * from emp111
where job=jb;

begin

for x in c1(10,'&jb') loop
dbms_output.put_line('Emp no:' || x.eno);

dbms_output.put_line('Emp name:' || x.enm);

dbms_output.put_line('Emp sal:' || x.sal); 

end loop;
end; */





/* create procedure is
name varchar2(10);
begin
name:=&name;
if(lower('&name'))
then 
	dbms_output.put_line(upper('&name'));
end if;
end; */

--------multiple cursors
/* declare
cursor c1 is
select * from emp111;
cursor c2 is
select * from dept111;
begin
for x in c2 loop
	dbms_output.put_line('dnm: ' || x.dnm);
	for y in c1 loop
		if(x.dno = y.dno) then
			dbms_output.put_line('enm: ' || y.enm);
		end if;
	end loop;
end loop;
end; */

 
/* create function add1(a number,b number)
return number is
c number;
begin
c:=a+b;
return c;
end add1; */


/* create or replace procedure maxsal(vdno emp111.dno%type)
is 
max1 number;
begin
select max(sal) into max1 from emp111 group by dno having dno=vdno;
dbms_output.put_line('max sal : ' || max1);
end maxsal; */

/* create or replace procedure minsal(vdno emp111.dno%type)
is 
min1 number;
begin
select min(sal) into min1 from emp111 group by dno having dno=vdno;
dbms_output.put_line('min sal : ' || min1);
end minsal; */

 
/* create or replace procedure callpr(vdno emp111.dno%type)
is
begin
maxsal(vdno);
minsal(vdno);
end callpr; */


/* declare
no number;
begin
no:=&no;
callpr(no);
end; */


/* declare 
cursor c1 is
select * from emp111;
begin
for x in c1 loop
dbms_output.put_line(x.eno || ' is working in dept ' || x.dno || ' earn Rs '|| x.sal);
end loop; 
end; */


--create table e(eno number primary key,enm varchar2(10),sal number(7,2),dno number);

--insert into e values(1,'manasi',20000,10);
--insert into e values(2,'pooja',30000,20);
--insert into e values(3,'poonam',15000,10);
--insert into e values(4,'rucha',19000,20);




--create table trig_table(eno number,enm varchar2(10),sal number(7,2),dno number,user1 varchar2(15),dt date);


/* update e
set sal=sal+2000
where dno=10; */

/* create or replace trigger tr1
before update
on e
for each row
begin
insert into trig_table values(:old.eno,:old.enm,:old.sal,:old.dno,user,sysdate);
end; */


/* update e
set sal=sal+2000
where dno=10; */

--create table e1(user1 varchar2(15),systimestamp timestamp,cnt number);



/* create or replace trigger tr2
before insert
on e
declare
cnt number;
begin
select count(*) into cnt from e;
insert into e1 values(user,systimestamp,cnt);
end; */

--insert into e values(5,'rupali',17000,10);

--create table trig_table_delete(eno number,enm varchar2(10),sal number(7,2),dno number,user1 varchar2(15),dt date);


/* create or replace trigger tr3
before delete
on e
for each row
begin
insert into trig_table_delete values(:old.eno,:old.enm,:old.sal,:old.dno,user,sysdate);
end; /*

--delete from e
--where eno=5;

















