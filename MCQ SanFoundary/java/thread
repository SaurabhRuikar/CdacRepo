Java Questions & Answers – Thread class

This section of our 1000+ Java MCQs focuses on Thread class of Java Programming Language.

1. Which of these method of Thread class is used to find out the priority given to a thread?
a) get()
b) ThreadPriority()
c) getPriority()
d) getThreadPriority()
View Answer

Answer: c
Explanation: None.
2. Which of these method of Thread class is used to Suspend a thread for a period of time?
a) sleep()
b) terminate()
c) suspend()
d) stop()
View Answer

Answer: a
Explanation: None.
3. Which function of pre defined class Thread is used to check weather current thread being checked is still running?
a) isAlive()
b) Join()
c) isRunning()
d) Alive()
View Answer

Answer: a
Explanation:isAlive() function is defined in class Thread, it is used for implementing multithreading and to check whether the thread called upon is still running or not.
4. What is the output of this program?

    class multithreaded_programing
    {
        public static void main(String args[])
        {
            Thread t = Thread.currentThread();
            t.setName("New Thread");
            System.out.println(t);        
        }
    }
a) Thread[5,main].
b) Thread[New Thread,5].
c) Thread[main,5,main].
d) Thread[New Thread,5,main].
View Answer

Answer: d
Explanation: None.
Output:
$ javac multithreaded_programing.java
$ java multithreaded_programing
Thread[New Thread,5,main]
5. What is the priority of the thread in output of this program?

    class multithreaded_programing
    {
        public static void main(String args[])
        {
            Thread t = Thread.currentThread();
            t.setName("New Thread");
            System.out.println(t.getName());        
        }
    }
a) main
b) Thread
c) New Thread
d) Thread[New Thread,5,main].
View Answer

Answer: c
Explanation: The getName() function is used to obtain the name of the thread, in this code the name given to thread is ‘New Thread’.
Output:
$ javac multithreaded_programing.java
$ java multithreaded_programing
New Thread
6. What is the name of the thread in output of this program?

advertisement

    class multithreaded_programing
    {
        public static void main(String args[])
        {
            Thread t = Thread.currentThread();
            System.out.println(t.getPriority());        
        }
    }
a) 0
b) 1
c) 4
d) 5
View Answer

Answer: d
Explanation: The default priority given to a thread is 5.
Output:
$ javac multithreaded_programing.java
$ java multithreaded_programing
5


Java Questions & Answers – Multithreading Basics

This section of our 1000+ Java MCQs focuses on Basics of multithreading of Java Programming Language.

1. What is multithreaded programming?
a) It’s a process in which two different processes run simultaneously
b) It’s a process in which two or more parts of same process run simultaneously
c) It’s a process in which many different process are able to access same information
d) It’s a process in which a single process can access information from many sources
View Answer

Answer: b
Explanation: Multithreaded programming a process in which two or more parts of the same process run simultaneously.
2. Which of these are types of multitasking?
a) Process based
b) Thread based
c) Process and Thread based
d) None of the mentioned
View Answer

Answer: c
Explanation: There are two types of multitasking: Process based multitasking and Thread based multitasking.
3. Thread priority in Java is?
a) Integer
b) Float
c) double
d) long
View Answer

Answer: a
Explanation: Java assigns to each thread a priority that determines hoe that thread should be treated with respect to others. Thread priority is integers that specify relative priority of one thread to another.
4. What will happen if two thread of the same priority are called to be processed simultaneously?
a) Anyone will be executed first lexographically
b) Both of them will be executed simultaneously
c) None of them will be executed
d) It is dependent on the operating system
View Answer

Answer: d
Explanation: In cases where two or more thread with same priority are competing for CPU cycles, different operating system handle this situation differently. Some execute them in time sliced manner some depending on the thread they call.
5. Which of these statements is incorrect?
a) By multithreading CPU idle time is minimized, and we can take maximum use of it
b) By multitasking CPU idle time is minimized, and we can take maximum use of it
c) Two thread in Java can have the same priority
d) A thread can exist only in two states, running and blocked
View Answer

Answer: d
Explanation: Thread exist in several states, a thread can be running, suspended, blocked, terminated & ready to run.
6. What is the output of this program?

    class multithreaded_programing
    {
        public static void main(String args[])
        {
            Thread t = Thread.currentThread();
            System.out.println(t);        
        }
    }
a) Thread[5,main].
b) Thread[main,5].
c) Thread[main,0].
d) Thread[main,5,main].
View Answer

Answer: d
Explanation: None.
Output:
$ javac multithreaded_programing.java
$ java multithreaded_programing
Thread[main,5,main]
7. What is the priority of the thread in output of this program?

    class multithreaded_programing 
    {
        public static void main(String args[])
        {
            Thread t = Thread.currentThread();
            System.out.println(t);        
        }
    }
a) 4
b) 5
c) 0
d) 1
View Answer

Answer: b
Explanation: The output of program is Thread[main,5,main], in this priority assigned to the thread is 5. It’s the default value. Since we have not named the thread they are named by the group to they belong i:e main method.
Output:
advertisement

$ javac multithreaded_programing.java
$ java multithreaded_programing
Thread[main,5,main]
8. What is the name of the thread in output of this program?

    class multithreaded_programing
    {
        public static void main(String args[])
        {
            Thread t = Thread.currentThread();
            System.out.println(t);        
        }
    }
a) main
b) Thread
c) System
d) None of the mentioned
View Answer

Answer: a
Explanation: The output of program is Thread[main,5,main], Since we have not explicitly named the thread they are named by the group to they belong i:e main method. Hence they are named ‘main’.
Output:
$ javac multithreaded_programing.java
$ java multithreaded_programing
Thread[main,5,main]


Java Questions & Answers – Multithreading
This set of Java Quiz focuses on “Multithreading”.

1. What requires less resources?
a) Thread
b) Process
c) Thread and Process
d) Neither Thread nor Process
View Answer

Answer: a
Explanation: Thread is a lightweight and requires less resources to create and exist in the process. Thread shares the process resources.
2. What does not prevent JVM from terminating?
a) Process
b) Daemon Thread
c) User Thread
d) JVM Thread
View Answer

Answer: b
Explanation: Daemon thread runs in the background and does not prevent JVM from terminating. Child of daemon thread is also daemon thread.
3. What decides thread priority?
a) Process
b) Process scheduler
c) Thread
d) Thread scheduler
View Answer

Answer: d
Explanation: Thread scheduler decides the priority of the thread execution. This cannot guarantee that higher priority thread will be executed first, it depends on thread scheduler implementation that is OS dependent.
4. What is true about time slicing?
a) Time slicing is OS service that allocates CPU time to available runnable thread
b) Time slicing is the process to divide the available CPU time to available runnable thread
c) Time slicing depends on its implementation in OS
d) Time slicing allocates more resources to thread
View Answer

Answer: b
Explanation: Time slicing is the process to divide the available CPU time to available runnable thread.
5. Deadlock is a situation when thread is waiting for other thread to release acquired object.
a) True
b) False
View Answer

Answer: a
Explanation: Deadlock is java programming situation where one thread waits for an object lock that is acquired by other thread and vice-versa.
6. What should not be done to avoid deadlock?
a) Avoid using multiple threads
b) Avoid hold several locks at once
c) Execute foreign code while holding a lock
d) Use interruptible locks
View Answer

Answer: c
Explanation: To avoid deadlock situation in Java programming do not execute foreign code while holding a lock.
7. What is true about threading?
a) run() method calls start() method and runs the code
b) run() method creates new thread
c) run() method can be called directly without start() method being called
d) start() method creates new thread and calls code written in run() method
View Answer

Answer: d
Explanation: start() eventually calls run() method. Start() method creates thread and calls the code written inside run method.
8. Which of the following is a correct constructor for thread?
a) Thread(Runnable a, String str)
b) Thread(int priority)
c) Thread(Runnable a, int priority)
d) Thread(Runnable a, ThreadGroup t)
View Answer

Answer: a
Explanation: Thread(Runnable a, String str) is a valid constructor for thread. Thread() is also a valid constructor.
9. Which of the following stops execution of a thread?
a) Calling SetPriority() method on a Thread object
b) Calling notify() method on an object
c) Calling wait() method on an object
d) Calling read() method on an InputStream object
View Answer

Answer: b
Explanation: notify() wakes up a single thread which is waiting for this object.
10. Which of the following will ensure the thread will be in running state?
a) yield()
b) notify()
c) wait()
d) Thread.killThread()
View Answer

Answer: c
Explanation: wait() always causes the current thread to go into the object’s wait pool. Hence, using this in a thread will keep it in running state.

